//------------------------------------//
//            R E M E D Y             //
//       제작 : 오승주, 박현수         //
//       기획 : 여지혁, 박현수         //
//                                    //
//  Copyright © All Rights Reserved.  //
//         R E M E D Y  2014          //
//------------------------------------//

#include <stdio.h>
#include <stdlib.h>
#include <windows.h>
#include <conio.h>

#define MAZE_BOARD_HEIGHT 20
#define MAZE_BOARD_WIDTH 30
#define POINT_X 4  //보드 시작좌표 x
#define POINT_Y 2  //보드 시작좌표 y

#define LEFT 75
#define RIGHT 77
#define UP 72
#define DOWN 80

#define DELAY 100
#define EXIT 50

int currunt_stage = 1;

int maze[MAZE_BOARD_HEIGHT][MAZE_BOARD_WIDTH] = {
	{ '1', '1', '1', '1', '1', '1' },
	{ 'e', '0', '0', '0', '0', '1' },
	{ '1', '0', '1', '1', '1', '1' },
	{ '1', '0', '0', '0', '1', '1' },
	{ '1', '0', '1', '0', '0', '1' },
	{ '1', '0', '0', '1', '0', '1' },
	{ '1', '1', '1', '0', '0', '1' },
	{ '1', '0', '1', '0', '1', '1' },
	{ '1', '0', '0', '0', '0', 'x' },
	{ '1', '1', '1', '1', '1', '1' }
};

int maze2[MAZE_BOARD_HEIGHT][MAZE_BOARD_WIDTH] = {
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ 'e', '0', '1', '1', '1', '0', '1', '0', '0', '0', '0', '1', '1', '1', '1', '1', '0', '0', 'x' },
	{ '1', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '0', '0', '0', '1', '1', '0', '1', '1' },
	{ '1', '0', '1', '1', '1', '1', '1', '0', '1', '0', '1', '0', '1', '0', '1', '1', '0', '1', '1' },
	{ '1', '0', '1', '0', '0', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '1', '0', '1', '1' },
	{ '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '0', '1', '1' },
	{ '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '1', '1' },
	{ '1', '0', '1', '0', '1', '0', '0', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '1', '1' },
	{ '1', '0', '1', '0', '1', '1', '1', '1', '1', '0', '1', '0', '1', '0', '1', '0', '1', '1', '1' },
	{ '1', '0', '1', '0', '1', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '0', '1', '1', '1' },
	{ '1', '0', '0', '0', '1', '0', '1', '1', '1', '1', '1', '0', '1', '0', '1', '0', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '1', '1' },
	{ '1', '0', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '0', '1', '1', '1' },
	{ '1', '0', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1' },
	{ '1', '0', '1', '0', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1' },
	{ '1', '0', '1', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1' },
	{ '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
};

int maze3[MAZE_BOARD_HEIGHT][MAZE_BOARD_WIDTH] = {
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ 'e', '0', '1', '1', '0', '0', '0', '1', '0', '0', '0', '1', '1', '0', '1', '1', '1', '0', '1' },
	{ '1', '0', '1', '1', '0', '1', '0', '1', '0', '1', '0', '1', '1', '0', '0', '0', '1', '0', '1' },
	{ '1', '0', '0', '0', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '0', '1' },
	{ '1', '0', '1', '0', '1', '1', '0', '0', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '1' },
	{ '1', '0', '1', '0', '0', '0', '1', '1', '1', '1', '0', '0', '0', '0', '1', '0', '1', '0', '1' },
	{ '1', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', '0', '1', '0', '0', '0', '0', '1', '1' },
	{ '1', '0', '0', '0', '1', '0', '0', '0', '1', '0', '0', '0', '1', '0', '1', '0', '1', '1', '1' },
	{ '1', '1', '1', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', '0', '1', '0', '1', '0', '1' },
	{ '1', '0', '0', '0', '1', '0', '1', '0', '0', '0', '1', '0', '1', '0', '0', '1', '0', '0', '1' },
	{ '1', '0', '1', '1', '1', '1', '1', '1', '1', '0', '1', '0', '0', '1', '0', '1', '1', '0', '1' },
	{ '1', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '1', '0', '0', '0', '1', '1', '0', '1' },
	{ '1', '1', '1', '1', '1', '0', '1', '1', '1', '0', '0', '0', '1', '1', '1', '0', '0', '0', '1' },
	{ '1', '1', '1', '1', '1', '0', '1', '0', '0', '1', '1', '0', '0', '0', '1', '0', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '0', '0', '0', '1', '1' },
	{ '1', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '1', '1', '1', '0', '1', '1' },
	{ '1', '0', '1', '1', '1', '1', '1', '1', '1', '0', '0', '1', '0', '1', '1', '1', '0', '0', '1' },
	{ '1', '0', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '0', '0', '0', '1', '0', '1' },
	{ '1', '1', '0', '0', '1', '0', '1', '0', '1', '0', '1', '1', '1', '1', '1', '0', '1', '0', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', 'x', '1', '1', '1' },
};

int maze4[MAZE_BOARD_HEIGHT][MAZE_BOARD_WIDTH] = {
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ 'e', '0', '0', '0', '1', '1', '1', '0', '1', '0', '0', '1', '1', '0', '0', '0', '1', '0', '1' },
	{ '1', '0', '1', '0', '1', '0', '0', '0', '1', '1', '1', '0', '0', '0', '1', '0', '0', '0', '1' },
	{ '1', '0', '1', '0', '1', '0', '1', '0', '0', '0', '1', '1', '0', '1', '1', '1', '0', '1', '1' },
	{ '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '1', '0', '1', '0', '1', '0', '1', '1' },
	{ '1', '0', '0', '1', '1', '0', '1', '1', '1', '0', '1', '1', '0', '0', '1', '1', '0', '1', '1' },
	{ '1', '1', '0', '0', '1', '0', '1', '0', '0', '0', '1', '1', '1', '0', '1', '1', '0', '1', '1' },
	{ '1', '1', '1', '0', '0', '0', '1', '0', '1', '1', '1', '0', '1', '0', '1', '0', '0', '0', '1' },
	{ '1', '0', '0', '1', '1', '1', '0', '0', '1', '1', '0', '0', '0', '0', '1', '0', '1', '0', '1' },
	{ '1', '0', '1', '0', '0', '0', '0', '1', '0', '1', '0', '1', '1', '1', '1', '0', '1', '0', '1' },
	{ '1', '0', '1', '0', '1', '0', '1', '1', '1', '0', '0', '1', '0', '1', '1', '0', '1', '0', '1' },
	{ '1', '0', '1', '0', '1', '1', '1', '1', '0', '0', '1', '0', '0', '0', '1', '0', '1', '0', '1' },
	{ '1', '0', '0', '0', '1', '1', '0', '1', '0', '1', '1', '1', '0', '1', '0', '0', '1', '0', '1' },
	{ '1', '0', '1', '1', '1', '0', '0', '0', '0', '1', '0', '1', '0', '1', '0', '1', '1', '1', '1' },
	{ '1', '0', '0', '1', '1', '0', '1', '1', '0', '1', '1', '0', '0', '1', '0', '0', '0', '1', '1' },
	{ '1', '1', '0', '1', '0', '0', '1', '0', '0', '1', '0', '0', '1', '1', '0', '1', '0', '0', '1' },
	{ '1', '0', '0', '1', '0', '1', '0', '0', '1', '1', '0', '1', '0', '0', '0', '1', '1', '0', '1' },
	{ '1', '0', '1', '1', '0', '1', '0', '1', '1', '1', '0', '1', '1', '0', '0', '1', '0', '0', '1' },
	{ '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', 'x', '1', '1', '1' },
};
int maze5[MAZE_BOARD_HEIGHT][MAZE_BOARD_WIDTH] = {
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ 'e', '0', '1', '0', '0', '0', '0', '0', '1', '1', '0', '0', '0', '0', '1', '1', '0', '0', '1' },
	{ '1', '0', '1', '0', '1', '1', '1', '0', '0', '1', '0', '1', '1', '0', '0', '0', '1', '0', '1' },
	{ '1', '0', '1', '0', '0', '0', '1', '1', '0', '1', '0', '0', '1', '1', '1', '0', '0', '0', '1' },
	{ '1', '0', '1', '1', '1', '0', '1', '0', '0', '1', '1', '0', '1', '1', '1', '1', '0', '1', '1' },
	{ '1', '0', '0', '1', '0', '0', '1', '0', '1', '1', '0', '0', '1', '0', '0', '0', '0', '0', '1' },
	{ '1', '1', '0', '1', '0', '1', '1', '0', '0', '1', '0', '1', '1', '0', '1', '1', '1', '0', '1' },
	{ '1', '1', '0', '0', '0', '0', '0', '1', '0', '0', '0', '1', '0', '0', '1', '0', '0', '0', '1' },
	{ '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '1', '1', '0', '1', '0', '1' },
	{ '1', '1', '0', '0', '1', '1', '0', '1', '1', '1', '0', '0', '1', '1', '0', '0', '1', '0', '1' },
	{ '1', '0', '1', '0', '1', '1', '0', '0', '0', '0', '1', '0', '1', '1', '0', '1', '0', '0', '1' },
	{ '1', '1', '0', '0', '1', '0', '0', '1', '1', '0', '0', '0', '1', '1', '0', '0', '1', '0', '1' },
	{ '1', '0', '0', '1', '0', '0', '1', '1', '1', '1', '1', '1', '0', '0', '1', '0', '1', '0', '1' },
	{ '1', '1', '1', '0', '0', '1', '0', '0', '0', '0', '0', '1', '1', '0', '1', '0', '0', '1', '1' },
	{ '1', '0', '0', '0', '1', '1', '0', '1', '1', '1', '0', '1', '1', '0', '0', '1', '0', '0', '1' },
	{ '1', '0', '1', '1', '0', '0', '0', '0', '1', '1', '0', '1', '0', '1', '0', '0', '1', '0', '1' },
	{ '1', '0', '1', '1', '1', '1', '1', '0', '0', '1', '0', '0', '1', '1', '1', '0', '1', '0', '1' },
	{ '1', '0', '1', '0', '0', '0', '1', '1', '0', '1', '1', '0', '0', '0', '0', '0', '1', '0', '1' },
	{ '1', '0', '0', '0', '1', '0', '0', '0', '0', '0', '1', '0', '1', '1', '1', '1', '0', '0', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', 'x', '1', '1', '1', '1', '1', '1', '1' },
};
int maze6[MAZE_BOARD_HEIGHT][MAZE_BOARD_WIDTH] = {
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ 'e', '0', '1', '0', '0', '0', '0', '0', '0', '1', '1', '0', '1', '1', '0', '1', '1', '0', '1' },
	{ '1', '0', '1', '0', '1', '1', '1', '1', '0', '0', '1', '1', '0', '1', '1', '0', '1', '1', '1' },
	{ '1', '0', '1', '0', '0', '0', '0', '1', '0', '1', '0', '0', '0', '0', '0', '1', '0', '0', '1' },
	{ '1', '0', '1', '0', '1', '1', '0', '1', '0', '1', '0', '1', '1', '0', '1', '0', '1', '1', '1' },
	{ '1', '0', '1', '0', '1', '1', '0', '1', '0', '1', '0', '1', '1', '0', '0', '1', '0', '1', '1' },
	{ '1', '0', '1', '1', '0', '0', '0', '1', '0', '1', '0', '1', '1', '0', '1', '1', '0', '0', '1' },
	{ '1', '0', '1', '1', '0', '1', '1', '1', '0', '1', '0', '1', '1', '0', '0', '0', '1', '0', '1' },
	{ '1', '0', '1', '0', '0', '1', '1', '1', '0', '0', '0', '1', '1', '1', '1', '0', '1', '0', '1' },
	{ '1', '0', '1', '1', '0', '0', '0', '0', '1', '1', '0', '1', '0', '1', '1', '0', '1', '0', '1' },
	{ '1', '0', '1', '0', '1', '1', '1', '0', '1', '0', '0', '1', '0', '0', '1', '0', '0', '0', '1' },
	{ '1', '0', '0', '0', '0', '0', '1', '0', '1', '1', '0', '1', '1', '0', '1', '0', '1', '1', '1' },
	{ '1', '1', '0', '1', '1', '0', '1', '0', '0', '1', '0', '0', '1', '0', '1', '0', '0', '1', '1' },
	{ '1', '1', '0', '1', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '1', '0', '1', '1' },
	{ '1', '1', '0', '0', '0', '1', '0', '1', '0', '1', '0', '0', '1', '0', '1', '1', '0', '1', '1' },
	{ '1', '1', '0', '1', '1', '0', '0', '1', '0', '1', '1', '0', '1', '0', '0', '1', '0', '1', '1' },
	{ '1', '0', '0', '1', '1', '0', '1', '0', '0', '0', '1', '0', '0', '1', '0', '1', '0', '1', '1' },
	{ '1', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '1', '0', '1', '0', '1', '0', '0', 'x' },
	{ '1', '0', '1', '1', '1', '1', '1', '1', '1', '0', '0', '1', '0', '0', '0', '0', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
};
int maze7[MAZE_BOARD_HEIGHT][MAZE_BOARD_WIDTH] = {
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ 'e', '0', '0', '1', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '1', '1', '0', '1' },
	{ '1', '1', '0', '1', '0', '1', '0', '1', '1', '0', '0', '1', '0', '1', '0', '1', '0', '0', '1' },
	{ '1', '1', '0', '0', '0', '1', '0', '1', '0', '0', '1', '1', '0', '1', '0', '0', '0', '1', '1' },
	{ '1', '1', '0', '1', '1', '0', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '1' },
	{ '1', '0', '0', '0', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '0', '1' },
	{ '1', '0', '1', '1', '0', '1', '0', '1', '0', '0', '1', '0', '0', '1', '0', '0', '1', '0', '1' },
	{ '1', '0', '0', '0', '0', '1', '1', '1', '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1' },
	{ '1', '1', '0', '1', '0', '0', '0', '0', '1', '0', '1', '0', '0', '1', '1', '0', '1', '0', '1' },
	{ '1', '0', '0', '1', '1', '1', '1', '0', '1', '0', '0', '1', '0', '1', '0', '0', '1', '0', '1' },
	{ '1', '0', '1', '1', '0', '0', '1', '0', '1', '1', '0', '1', '0', '1', '0', '1', '0', '0', '1' },
	{ '1', '0', '0', '1', '0', '0', '1', '0', '1', '1', '0', '1', '0', '0', '0', '1', '0', '1', '1' },
	{ '1', '1', '0', '1', '0', '1', '1', '0', '0', '0', '0', '1', '0', '0', '1', '0', '0', '0', '1' },
	{ '1', '1', '0', '1', '0', '1', '0', '1', '1', '1', '1', '1', '0', '1', '0', '0', '0', '1', '1' },
	{ '1', '1', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '1' },
	{ '1', '0', '1', '1', '1', '0', '0', '1', '1', '1', '1', '1', '0', '1', '0', '1', '1', '0', '1' },
	{ '1', '1', '0', '1', '0', '1', '1', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1' },
	{ '1', '0', '1', '0', '1', '0', '1', '1', '0', '1', '0', '1', '0', '1', '1', '1', '1', '0', '1' },
	{ '1', '0', '1', '1', '1', '1', '0', '1', '1', '1', '1', '0', '1', '1', '0', '0', '0', '0', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', 'x', '1', '1', '1', '1' },
};
int maze8[MAZE_BOARD_HEIGHT][MAZE_BOARD_WIDTH] = {
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ 'e', '0', '0', '0', '0', '1', '0', '0', '0', '1', '1', '1', '0', '0', '0', '1', '1', '1', '1' },
	{ '1', '1', '0', '1', '0', '1', '0', '1', '0', '0', '1', '0', '0', '1', '0', '0', '0', '0', '1' },
	{ '1', '0', '0', '1', '0', '1', '0', '0', '1', '0', '0', '1', '0', '1', '1', '0', '1', '0', '1' },
	{ '1', '1', '0', '1', '0', '0', '0', '1', '0', '1', '0', '0', '0', '1', '0', '0', '1', '0', '1' },
	{ '1', '0', '0', '1', '0', '1', '1', '1', '0', '0', '1', '0', '1', '0', '0', '1', '0', '1', '1' },
	{ '1', '0', '1', '0', '1', '0', '0', '0', '1', '0', '1', '0', '1', '0', '1', '1', '0', '1', '1' },
	{ '1', '0', '0', '1', '1', '0', '1', '0', '1', '0', '0', '0', '1', '0', '0', '1', '0', '0', '1' },
	{ '1', '1', '0', '0', '1', '0', '1', '0', '0', '1', '1', '1', '0', '1', '0', '1', '0', '1', '1' },
	{ '1', '0', '1', '0', '1', '0', '1', '1', '0', '1', '0', '0', '0', '0', '0', '1', '0', '0', '1' },
	{ '1', '0', '0', '0', '1', '0', '0', '1', '0', '1', '0', '1', '0', '1', '1', '0', '0', '1', '1' },
	{ '1', '0', '1', '0', '1', '1', '0', '1', '0', '1', '0', '0', '1', '0', '1', '1', '0', '1', '1' },
	{ '1', '0', '1', '0', '1', '0', '0', '1', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '1' },
	{ '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1', '1', '1', '1', '1', '1', '1', '0', '1' },
	{ '1', '0', '0', '0', '1', '0', '1', '1', '0', '0', '1', '0', '0', '0', '1', '0', '0', '0', '1' },
	{ '1', '0', '1', '1', '1', '0', '0', '1', '0', '1', '0', '0', '1', '0', '1', '0', '1', '1', '1' },
	{ '1', '0', '1', '1', '1', '1', '0', '1', '0', '1', '0', '1', '0', '0', '1', '0', '0', '1', '1' },
	{ '1', '0', '0', '0', '0', '1', '0', '1', '0', '0', '0', '1', '0', '1', '1', '1', '0', '0', '1' },
	{ '1', '1', '1', '1', '0', '0', '0', '1', '1', '1', '1', '0', '0', '0', '0', '0', '1', '0', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', 'x', '1', '1', '1', '1', '1', '1', '1' },
};
int maze9[MAZE_BOARD_HEIGHT][MAZE_BOARD_WIDTH] = {
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ 'e', '0', '0', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '0', '0', '0', '0', '1', '1' },
	{ '1', '1', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '1', '1' },
	{ '1', '1', '0', '1', '0', '1', '1', '1', '1', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1' },
	{ '1', '1', '0', '1', '0', '1', '0', '0', '0', '1', '1', '0', '1', '0', '1', '0', '1', '0', '1' },
	{ '1', '1', '0', '1', '0', '1', '1', '1', '0', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1' },
	{ '1', '1', '0', '1', '0', '1', '1', '0', '0', '1', '1', '0', '1', '0', '1', '0', '0', '0', '1' },
	{ '1', '1', '0', '1', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '1', '1', '0', '1' },
	{ '1', '0', '0', '1', '1', '1', '1', '1', '1', '0', '1', '0', '0', '0', '0', '0', '1', '0', '1' },
	{ '1', '0', '1', '0', '0', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '0', '1' },
	{ '1', '0', '1', '1', '1', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '1' },
	{ '1', '0', '1', '1', '1', '1', '1', '1', '1', '0', '1', '0', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '0', '1', '1', '0', '0', '0', '0', '1', '0', '1', '0', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '0', '1', '1', '0', '1', '1', '0', '1', '0', '1', '0', '0', '0', '0', '0', '0', '0', '1' },
	{ '1', '0', '1', '1', '0', '1', '1', '0', '1', '0', '1', '1', '1', '1', '1', '1', '1', '0', '1' },
	{ '1', '0', '1', '1', '0', '1', '0', '0', '1', '0', '1', '0', '0', '0', '0', '0', '0', '0', '1' },
	{ '1', '0', '0', '1', '0', '0', '1', '0', '1', '0', '1', '0', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '0', '1', '0', '1', '1', '0', '1', '0', '1', '0', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '0', '0', '0', '1', '1', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', 'x' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
};
int maze10[MAZE_BOARD_HEIGHT][MAZE_BOARD_WIDTH] = {
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ 'e', '0', '0', '1', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', '0', '0', '1', '1', '1' },
	{ '1', '1', '0', '1', '1', '1', '1', '1', '0', '0', '0', '1', '0', '1', '1', '0', '1', '1', '1' },
	{ '1', '1', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '1', '0', '0', '1', '1' },
	{ '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '0', '1', '0', '1', '1', '0', '1', '0', '1' },
	{ '1', '1', '1', '1', '0', '1', '0', '1', '1', '1', '0', '1', '0', '0', '1', '0', '0', '0', '1' },
	{ '1', '1', '1', '1', '0', '1', '0', '1', '1', '1', '0', '1', '1', '0', '1', '0', '1', '1', '1' },
	{ '1', '0', '0', '0', '0', '1', '0', '1', '1', '1', '0', '0', '1', '0', '1', '0', '1', '1', '1' },
	{ '1', '0', '1', '1', '1', '1', '0', '0', '0', '0', '1', '0', '1', '0', '1', '0', '1', '0', '1' },
	{ '1', '0', '1', '1', '1', '1', '0', '1', '1', '0', '1', '0', '0', '0', '1', '0', '1', '0', '1' },
	{ '1', '0', '0', '0', '0', '1', '0', '1', '0', '0', '1', '1', '1', '1', '1', '0', '1', '0', '1' },
	{ '1', '1', '1', '1', '0', '1', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '1', '0', '1' },
	{ '1', '0', '0', '0', '0', '1', '0', '1', '1', '1', '1', '1', '0', '1', '1', '0', '1', '0', '1' },
	{ '1', '0', '1', '1', '1', '0', '0', '0', '0', '1', '0', '1', '0', '1', '1', '0', '1', '0', '1' },
	{ '1', '0', '0', '0', '0', '0', '1', '1', '0', '1', '0', '1', '0', '1', '0', '0', '0', '0', '1' },
	{ '1', '0', '1', '1', '1', '1', '0', '0', '0', '1', '0', '1', '0', '1', '1', '0', '0', '1', '1' },
	{ '1', '0', '0', '0', '0', '0', '1', '1', '0', '1', '0', '1', '0', '0', '0', '1', '0', '1', '1' },
	{ '1', '1', '1', '1', '1', '0', '0', '1', '0', '1', '0', '1', '1', '1', '0', '1', '0', '1', '1' },
	{ '1', '0', '0', '0', '0', '0', '1', '1', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', 'x' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
};
int maze11[MAZE_BOARD_HEIGHT][MAZE_BOARD_WIDTH] = {
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ 'e', '0', '0', '0', '0', '0', '1', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0', '1', '1' },
	{ '1', '0', '1', '0', '1', '0', '0', '0', '1', '0', '1', '1', '0', '1', '0', '1', '0', '0', '1' },
	{ '1', '0', '1', '0', '1', '1', '1', '1', '1', '0', '0', '0', '0', '1', '0', '0', '0', '1', '1' },
	{ '1', '0', '0', '1', '0', '1', '0', '0', '0', '0', '1', '0', '1', '0', '1', '1', '0', '0', '1' },
	{ '1', '0', '1', '0', '0', '0', '1', '0', '1', '1', '1', '0', '0', '1', '0', '0', '0', '1', '1' },
	{ '1', '0', '1', '1', '1', '0', '1', '1', '1', '0', '0', '1', '1', '0', '0', '1', '0', '0', '1' },
	{ '1', '0', '1', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '1', '1', '0', '1', '1' },
	{ '1', '0', '1', '0', '1', '1', '0', '1', '0', '1', '0', '0', '1', '1', '0', '0', '0', '0', '1' },
	{ '1', '0', '0', '1', '1', '1', '0', '1', '0', '0', '1', '0', '0', '1', '0', '1', '1', '1', '1' },
	{ '1', '0', '0', '1', '0', '0', '0', '1', '1', '0', '0', '0', '1', '0', '0', '1', '0', '0', '1' },
	{ '1', '0', '1', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '0', '1', '1' },
	{ '1', '0', '1', '0', '1', '1', '0', '0', '0', '1', '0', '0', '1', '0', '1', '0', '0', '0', '1' },
	{ '1', '0', '1', '0', '0', '0', '0', '1', '0', '1', '0', '1', '1', '0', '0', '0', '1', '0', '1' },
	{ '1', '0', '0', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '1', '1', '1', '1', '0', '1' },
	{ '1', '0', '1', '1', '1', '0', '0', '0', '1', '1', '1', '1', '0', '1', '0', '0', '0', '0', '1' },
	{ '1', '1', '0', '0', '0', '1', '1', '0', '0', '0', '1', '1', '0', '0', '1', '0', '1', '1', '1' },
	{ '1', '0', '0', '1', '0', '0', '1', '0', '1', '0', '0', '0', '1', '0', '1', '0', '0', '0', '1' },
	{ '1', '0', '1', '1', '1', '0', '0', '0', '1', '1', '1', '0', '0', '0', '0', '1', '0', '1', '1' },
	{ '1', 'x', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
};
int maze12[MAZE_BOARD_HEIGHT][MAZE_BOARD_WIDTH] = {
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ 'e', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '2', '3', '4', '5', '6', '7', '8', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
	{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1' },
};

int score = 0;
int stage = 1;

void setCursor(int x, int y)
{
	COORD pos;
	pos.X = x;
	pos.Y = y;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);
}

COORD getCursor(void)
{
	COORD curPoint;
	CONSOLE_SCREEN_BUFFER_INFO pos;
	GetConsoleScreenBufferInfo(GetStdHandle(STD_OUTPUT_HANDLE), &pos);
	curPoint.X = pos.dwCursorPosition.X;
	curPoint.Y = pos.dwCursorPosition.Y;
	return curPoint;
}

void removeCursor(void)
{
	CONSOLE_CURSOR_INFO cur;
	GetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &cur);
	cur.bVisible = 0;
	SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &cur);
}

void showBoard(void)
{
	int x, y;
	COORD cur = getCursor();

	for (y = 0; y<MAZE_BOARD_HEIGHT; y++)
	{
		for (x = 0; x<MAZE_BOARD_WIDTH; x++)
		{
			setCursor(cur.X + (x * 2), cur.Y + y);
			switch (currunt_stage)
			{
			case 1:
				if (maze[y][x] == '1')
					printf("■");
				if (maze[y][x] == 'x')
					printf("→");
				break;
			case 2:
				if (maze2[y][x] == '1')
					printf("■");
				if (maze2[y][x] == 'x')
					printf("→");
				break;
			case 3:
				if (maze3[y][x] == '1')
					printf("■");
				if (maze3[y][x] == 'x')
					printf("↓");
				break;
			case 4:
				if (maze4[y][x] == '1')
					printf("■");
				if (maze4[y][x] == 'x')
					printf("↓");
				break;
			case 5:
				if (maze5[y][x] == '1')
					printf("■");
				if (maze5[y][x] == 'x')
					printf("↓");
				break;
			case 6:
				if (maze6[y][x] == '1')
					printf("■");
				if (maze6[y][x] == 'x')
					printf("→");
				break;
			case 7:
				if (maze7[y][x] == '1')
					printf("■");
				if (maze7[y][x] == 'x')
					printf("↓");
				break;
			case 8:
				if (maze8[y][x] == '1')
					printf("■");
				if (maze8[y][x] == 'x')
					printf("↓");
				break;
			case 9:
				if (maze9[y][x] == '1')
					printf("■");
				if (maze9[y][x] == 'x')
					printf("→");
				break;
			case 10:
				if (maze10[y][x] == '1')
					printf("■");
				if (maze10[y][x] == 'x')
					printf("→");
				break;
			case 11:
				if (maze11[y][x] == '1')
					printf("■");
				if (maze11[y][x] == 'x')
					printf("↓");
				break;
			case 12:
				if (maze12[y][x] == '1')
					printf(" ");
				if (maze12[y][x] == '2')
					printf("수");
				if (maze12[y][x] == '3')
					printf("고");
				if (maze12[y][x] == '4')
					printf("하");
				if (maze12[y][x] == '5')
					printf("셨");
				if (maze12[y][x] == '6')
					printf("습");
				if (maze12[y][x] == '7')
					printf("니");
				if (maze12[y][x] == '8')
					printf("다");
				break;
			default:
				break;
			}
		}
	}
	setCursor(cur.X, cur.Y);
}
void showCharacter(void)
{
	COORD cur = getCursor();
	printf("◎");

	setCursor(cur.X, cur.Y);

}
int detect(int x, int y)
{
	int x1 = 0;
	int y1 = 0;

	// 커서 위치 얻기
	COORD cur = getCursor();

	// 미로내에서의 위치 계산.
	x1 = cur.X + x;
	y1 = cur.Y + y;
	x1 = x1 / 2 - 2;
	y1 = y1 - 2;

	// 미로 밖에 있느냐?
	if (!((x1 >= 0 && x1 <MAZE_BOARD_WIDTH) && (y1 >= 0 && y1 <MAZE_BOARD_HEIGHT)))
	{
		return 1;
	}
	switch (currunt_stage)
	{
	case 1:
		//배열을 넘어가지 않는이유?
		if (maze[y1][x1] == '1') //++
			return 1;
		//미션성공
		else if (maze[y1][x1] == 'x')
			return EXIT;
		else
			return 0;
		break;
	case 2:
		if (maze2[y1][x1] == '1') //++
			return 1;
		//미션성공
		else if (maze2[y1][x1] == 'x')
			return EXIT;
		else
			return 0;
		break;
	case 3:
		if (maze3[y1][x1] == '1') //++
			return 1;
		//미션성공
		else if (maze3[y1][x1] == 'x')
			return EXIT;
		else
			return 0;
		break;
	case 4:
		if (maze4[y1][x1] == '1') //++
			return 1;
		//미션성공
		else if (maze4[y1][x1] == 'x')
			return EXIT;
		else
			return 0;
		break;
	case 5:
		if (maze5[y1][x1] == '1') //++
			return 1;
		//미션성공
		else if (maze5[y1][x1] == 'x')
			return EXIT;
		else
			return 0;
		break;
	case 6:
		if (maze6[y1][x1] == '1') //++
			return 1;
		//미션성공
		else if (maze6[y1][x1] == 'x')
			return EXIT;
		else
			return 0;
	case 7:
		if (maze7[y1][x1] == '1') //++
			return 1;
		//미션성공
		else if (maze7[y1][x1] == 'x')
			return EXIT;
		else
			return 0;
		break;
	case 8:
		if (maze8[y1][x1] == '1') //++
			return 1;
		//미션성공
		else if (maze8[y1][x1] == 'x')
			return EXIT;
		else
			return 0;
		break;
	case 9:
		if (maze9[y1][x1] == '1') //++
			return 1;
		//미션성공
		else if (maze9[y1][x1] == 'x')
			return EXIT;
		else
			return 0;
		break;
	case 10:
		if (maze10[y1][x1] == '1') //++
			return 1;
		//미션성공
		else if (maze10[y1][x1] == 'x')
			return EXIT;
		else
			return 0;
		break;
	case 11:
		if (maze11[y1][x1] == '1') //++
			return 1;
		//미션성공
		else if (maze11[y1][x1] == 'x')
			return EXIT;
		else
			return 0;
		break;
	case 12:
		if (maze12[y1][x1] == '1') //++
			return 1;
		//미션성공
		else if (maze12[y1][x1] == 'x')
			return EXIT;
		else
			return 0;
		break;
	default:
		break;
	}
	/*
	//배열을 넘어가지 않는이유?
	if(maze2[y1][x1]=='1')
	return 1;
	//미션성공
	else if(maze2[y1][x1]=='x')
	return EXIT;
	else
	return 0;
	*/
}
int RemoveCharacter_Set(int x, int y)
{
	int value = detect(x, y);

	if (value == 0)
	{
		COORD cur = getCursor();

		printf("  ");
		setCursor(cur.X + x, cur.Y + y);
	}
	else if (value == EXIT)
	{
		setCursor(10, 15);
		printf("\n\n\n\n\n\n\nENTER를 두번 누르세요!\n\n\n\n");
		system("pause");

		currunt_stage += 1;
		score += 10;
		stage += 1;
		return 1;
		//exit(1);
	}

	return 0;
}


void character_static(void)
{
	int kb;
	int ret = 0;
	setCursor(4, 3);  //케릭터 시작위치
	while (1)
	{
		while (!_kbhit())
		{
			showCharacter();
			Sleep(DELAY);
		}
		kb = _getch();
		switch (kb)
		{
		case UP:
			ret = RemoveCharacter_Set(0, -1);
			break;
		case DOWN:
			ret = RemoveCharacter_Set(0, 1);
			break;
		case RIGHT:
			ret = RemoveCharacter_Set(2, 0);
			break;
		case LEFT:
			ret = RemoveCharacter_Set(-2, 0);
			break;
		}

		if (ret) break;
	}
}



int main()
{
	while (1)
	{
		system("cls");
		printf("점수 : %d점, 현재 %d 스테이지\n", score, stage);
		removeCursor(); //커서 깜박이 지우기
		setCursor(POINT_X, POINT_Y); //보드 시작좌표
		showBoard(); //미로판 보여주기
		character_static(); //케릭터 움직이기
		getchar();
	}
}
